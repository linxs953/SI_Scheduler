// Code generated by goctl. DO NOT EDIT.
// Source: Scheduler.proto

package server

import (
	"context"

	"Scheduler/internal/logic"
	"Scheduler/internal/svc"
	"Scheduler/scheduler"
)

type SchedulerServer struct {
	svcCtx *svc.ServiceContext
	scheduler.UnimplementedSchedulerServer
}

func NewSchedulerServer(svcCtx *svc.ServiceContext) *SchedulerServer {
	return &SchedulerServer{
		svcCtx: svcCtx,
	}
}

// TaskDefine 相关操作
func (s *SchedulerServer) CreateTaskDefine(ctx context.Context, in *scheduler.CreateTaskDefineRequest) (*scheduler.CreateTaskDefineResponse, error) {
	l := logic.NewCreateTaskDefineLogic(ctx, s.svcCtx)
	return l.CreateTaskDefine(in)
}

func (s *SchedulerServer) UpdateTaskDefine(ctx context.Context, in *scheduler.UpdateTaskDefineRequest) (*scheduler.UpdateTaskDefineResponse, error) {
	l := logic.NewUpdateTaskDefineLogic(ctx, s.svcCtx)
	return l.UpdateTaskDefine(in)
}

func (s *SchedulerServer) DeleteTaskDefine(ctx context.Context, in *scheduler.DeleteTaskDefineRequest) (*scheduler.DeleteTaskDefineResponse, error) {
	l := logic.NewDeleteTaskDefineLogic(ctx, s.svcCtx)
	return l.DeleteTaskDefine(in)
}

func (s *SchedulerServer) GetTaskDefine(ctx context.Context, in *scheduler.GetTaskDefineRequest) (*scheduler.GetTaskDefineResponse, error) {
	l := logic.NewGetTaskDefineLogic(ctx, s.svcCtx)
	return l.GetTaskDefine(in)
}

func (s *SchedulerServer) ListTaskDefines(ctx context.Context, in *scheduler.ListTaskDefinesRequest) (*scheduler.ListTaskDefinesResponse, error) {
	l := logic.NewListTaskDefinesLogic(ctx, s.svcCtx)
	return l.ListTaskDefines(in)
}

// ImageBuild 相关操作
func (s *SchedulerServer) CreateImageBuild(ctx context.Context, in *scheduler.CreateImageBuildRequest) (*scheduler.CreateImageBuildResponse, error) {
	l := logic.NewCreateImageBuildLogic(ctx, s.svcCtx)
	return l.CreateImageBuild(in)
}

func (s *SchedulerServer) UpdateImageBuild(ctx context.Context, in *scheduler.UpdateBuildRequest) (*scheduler.UpdateBuildResponse, error) {
	l := logic.NewUpdateImageBuildLogic(ctx, s.svcCtx)
	return l.UpdateImageBuild(in)
}

func (s *SchedulerServer) DeleteImageBuild(ctx context.Context, in *scheduler.DeleteBuildRequest) (*scheduler.DeleteBuildResponse, error) {
	l := logic.NewDeleteImageBuildLogic(ctx, s.svcCtx)
	return l.DeleteImageBuild(in)
}

func (s *SchedulerServer) GetImageBuild(ctx context.Context, in *scheduler.GetBuildRequest) (*scheduler.GetBuildResponse, error) {
	l := logic.NewGetImageBuildLogic(ctx, s.svcCtx)
	return l.GetImageBuild(in)
}

func (s *SchedulerServer) ListImageBuilds(ctx context.Context, in *scheduler.ListBuildsRequest) (*scheduler.ListBuildsResponse, error) {
	l := logic.NewListImageBuildsLogic(ctx, s.svcCtx)
	return l.ListImageBuilds(in)
}
